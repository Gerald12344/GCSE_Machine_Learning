{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nvar __jsx = React.createElement;\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport Slider from '@material-ui/core/Slider';\nimport styles from \"../styles/form.module.css\";\nimport { Sliders } from '../components/slider';\n\nfunction HomePage() {\n  var _useState = useState(undefined),\n      testHook = _useState[0],\n      setTestHook = _useState[1]; //Hooks \n\n\n  var _useState2 = useState(1),\n      PredictedGrade = _useState2[0],\n      setPredictedGrade = _useState2[1]; //Return Hook\n\n\n  var _useState3 = useState(undefined),\n      result = _useState3[0],\n      setResult = _useState3[1];\n\n  useEffect(function () {\n    (function _callee() {\n      var data;\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return _regeneratorRuntime.awrap(axios.get(window.origin + '/api/test'));\n\n            case 3:\n              data = _context.sent;\n              setTestHook(data.data);\n              _context.next = 10;\n              break;\n\n            case 7:\n              _context.prev = 7;\n              _context.t0 = _context[\"catch\"](0);\n              setTestHook(_context.t0);\n\n            case 10:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, [[0, 7]]);\n    })();\n  }, []);\n\n  var sendToServer = function sendToServer(e) {\n    var data;\n    return _regeneratorRuntime.async(function sendToServer$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            e.preventDefault();\n            setResult(\"LOADING...\");\n            _context2.next = 4;\n            return _regeneratorRuntime.awrap(axios.post(window.origin + '/api/inputTest', {\n              LastMockresult: LastMockresult,\n              TargetGrade: TargetGrade,\n              PredictedGrade: PredictedGrade,\n              AttitudeToLearing: AttitudeToLearing\n            }));\n\n          case 4:\n            data = _context2.sent;\n            console.log({\n              LastMockresult: LastMockresult,\n              TargetGrade: TargetGrade,\n              PredictedGrade: PredictedGrade,\n              AttitudeToLearing: AttitudeToLearing\n            });\n            setResult(Math.floor(data.data.AchievedGrade * 9));\n\n          case 7:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    });\n  };\n\n  return __jsx(\"div\", {\n    className: styles.main\n  }, __jsx(\"div\", null, \"Welcome to the front end!!\"), __jsx(\"h3\", {\n    className: styles.ResultBox\n  }, testHook ? \"Server is fully loaded and functional!\" : \"Loading...\"), __jsx(\"h1\", null, \"What grade would you award this student \"), __jsx(\"div\", {\n    className: styles.Form\n  }, __jsx(\"h3\", null, \"LastMockresult: \", Math.floor(Math.random() * 9)), __jsx(\"h3\", null, \"TargetGrade: \", Math.floor(Math.random() * 9)), __jsx(\"h3\", null, \"PredictedGrade: \", Math.floor(Math.random() * 9)), __jsx(\"h3\", null, \"AttitudeToLearing: \", Math.floor(Math.random() * 9)), __jsx(Sliders, {\n    max: 9,\n    title: \"Acheived Grade\",\n    onChange: function onChange(e, val) {\n      return setPredictedGrade(val / 9);\n    }\n  }), __jsx(\"button\", {\n    onClick: sendToServer,\n    className: styles.button\n  }, \"Send to Server\")));\n}\n\nexport default HomePage;","map":{"version":3,"sources":["/home/runner/FrontEndOfEPQ/pages/Train.js"],"names":["React","useState","useEffect","axios","Slider","styles","Sliders","HomePage","undefined","testHook","setTestHook","PredictedGrade","setPredictedGrade","result","setResult","get","window","origin","data","sendToServer","e","preventDefault","post","LastMockresult","TargetGrade","AttitudeToLearing","console","log","Math","floor","AchievedGrade","main","ResultBox","Form","random","val","button"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, } from 'react';\nimport axios from 'axios'\nimport Slider from '@material-ui/core/Slider';\nimport styles from \"../styles/form.module.css\"\nimport { Sliders } from '../components/slider'\n\nfunction HomePage() {\n  let [testHook, setTestHook] = useState(undefined)\n\n  //Hooks \n  let [PredictedGrade, setPredictedGrade] = useState(1)\n\n  //Return Hook\n  let [result, setResult] = useState(undefined)\n\n  useEffect(() => {\n    (async () => {\n       try{\n        let data = await axios.get(window.origin + '/api/test')\n        setTestHook(data.data)\n      }catch(e){\n        setTestHook(e)\n      }\n    })();\n  }, [])\n\n  let sendToServer = async (e) => {\n    e.preventDefault();\n    setResult(\"LOADING...\")\n    let data = await axios.post(window.origin + '/api/inputTest', {LastMockresult, TargetGrade, PredictedGrade, AttitudeToLearing})\n    console.log({LastMockresult, TargetGrade, PredictedGrade, AttitudeToLearing})\n    setResult(Math.floor(data.data.AchievedGrade*9))\n  }\n  return(\n    <div className={styles.main}>\n      <div>Welcome to the front end!!</div>\n      <h3 className={styles.ResultBox}>{ testHook ? \"Server is fully loaded and functional!\" : \"Loading...\" }</h3>\n      <h1>What grade would you award this student </h1>\n      <div className={styles.Form}>\n        <h3>LastMockresult: {Math.floor(Math.random() * 9)}</h3>\n        <h3>TargetGrade: {Math.floor(Math.random() * 9)}</h3>\n        <h3>PredictedGrade: {Math.floor(Math.random() * 9)}</h3>\n        <h3>AttitudeToLearing: {Math.floor(Math.random() * 9)}</h3>\n\n        <Sliders max={9} title=\"Acheived Grade\" onChange={(e, val) => setPredictedGrade(val/9)} />\n        <button onClick={sendToServer} className={styles.button}>Send to Server</button>\n      </div>\n    </div>\n  )\n}\n\nexport default HomePage"]},"metadata":{},"sourceType":"module"}