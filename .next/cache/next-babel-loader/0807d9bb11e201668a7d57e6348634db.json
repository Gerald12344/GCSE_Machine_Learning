{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nvar __jsx = React.createElement;\n// (c) Harvey Randall - 2020-2021 \n// GCSE exam algorithm for EPQ\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport Slider from '@material-ui/core/Slider';\nimport styles from \"../styles/form.module.css\";\nimport { Sliders } from '../components/slider';\nimport Alert from '@material-ui/lab/Alert';\n\nfunction HomePage() {\n  var _useState = useState(undefined),\n      testHook = _useState[0],\n      setTestHook = _useState[1]; //Hooks \n\n\n  var _useState2 = useState(1),\n      LastMockresult = _useState2[0],\n      setLastMockresult = _useState2[1];\n\n  var _useState3 = useState(1),\n      TargetGrade = _useState3[0],\n      setTargetGrade = _useState3[1];\n\n  var _useState4 = useState(1),\n      PredictedGrade = _useState4[0],\n      setPredictedGrade = _useState4[1];\n\n  var _useState5 = useState(1),\n      AttitudeToLearing = _useState5[0],\n      setAttitudeToLearing = _useState5[1]; //Return Hook\n\n\n  var _useState6 = useState(undefined),\n      result = _useState6[0],\n      setResult = _useState6[1];\n\n  useEffect(function () {\n    (function _callee() {\n      var data;\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return _regeneratorRuntime.awrap(axios.get(window.origin + '/api/test'));\n\n            case 3:\n              data = _context.sent;\n              setTestHook(data.data);\n              _context.next = 10;\n              break;\n\n            case 7:\n              _context.prev = 7;\n              _context.t0 = _context[\"catch\"](0);\n              setTestHook(_context.t0);\n\n            case 10:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, [[0, 7]]);\n    })();\n  }, []);\n\n  var sendToServer = function sendToServer(e) {\n    var data;\n    return _regeneratorRuntime.async(function sendToServer$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            e.preventDefault();\n            setResult(\"LOADING...\");\n            _context2.next = 4;\n            return _regeneratorRuntime.awrap(axios.post(window.origin + '/api/inputTest', {\n              LastMockresult: LastMockresult,\n              TargetGrade: TargetGrade,\n              PredictedGrade: PredictedGrade,\n              AttitudeToLearing: AttitudeToLearing\n            }));\n\n          case 4:\n            data = _context2.sent;\n            console.log({\n              LastMockresult: LastMockresult,\n              TargetGrade: TargetGrade,\n              PredictedGrade: PredictedGrade,\n              AttitudeToLearing: AttitudeToLearing\n            });\n            console.log(data.data.AchievedGrade);\n            setResult(data.data.AchievedGrade);\n\n          case 8:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    });\n  };\n\n  return __jsx(\"div\", {\n    className: styles.main\n  }, __jsx(\"div\", null, \"Welcome to the front end!!\"), __jsx(\"h3\", {\n    className: styles.ResultBox\n  }, testHook ? \"Server is fully loaded and functional!\" : \"Loading...\"), __jsx(\"h1\", {\n    className: styles.ResultBox\n  }, result ? \"I would award this student a grade \".concat(Math.floor(result * 9), \" with a confidence of \").concat((result - Math.floor(result * 9) / 9) * 2000, \"%\") : \"\", \" \"), __jsx(Alert, {\n    className: styles.Form + ' ' + styles.center,\n    severity: \"warning\"\n  }, \"This students grade is 2 above there last mock result, you need to verify this grade\"), __jsx(\"div\", {\n    className: styles.Form\n  }, __jsx(Sliders, {\n    max: 9,\n    title: \"Last Mock result\",\n    onChange: function onChange(e, val) {\n      return setLastMockresult(val / 9);\n    }\n  }), __jsx(Sliders, {\n    max: 9,\n    title: \"Target Grade\",\n    onChange: function onChange(e, val) {\n      return setTargetGrade(val / 9);\n    }\n  }), __jsx(Sliders, {\n    max: 9,\n    title: \"Predicted Grade\",\n    onChange: function onChange(e, val) {\n      return setPredictedGrade(val / 9);\n    }\n  }), __jsx(Sliders, {\n    max: 4,\n    title: \"Attidue to Learning\",\n    onChange: function onChange(e, val) {\n      return setAttitudeToLearing(val / 4);\n    }\n  }), __jsx(\"button\", {\n    onClick: sendToServer,\n    className: styles.button\n  }, \"Send to Server\")));\n}\n\nexport default HomePage;","map":null,"metadata":{},"sourceType":"module"}